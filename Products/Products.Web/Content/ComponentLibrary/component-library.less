@import (reference) "../Css/variables.less";
@import (reference) "../Css/mixins.less";


.pageWrap {
    background-image: none !important; // override
}

.svg-logo {
    max-width: 200px;
}

.img-svg {
    max-width: 200px;
    max-height: 200px;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' width='16' height='16'%3e%3cpath fill='%23ddd' d='m0 0h8v16h8V8H0z' /%3e%3c/svg%3e");
}

.img-svg-small img {
    max-width: 74px !important;
    max-height: 74px !important;
}

#main-content {
    padding-top: 48px;
}

.vertical-grid {
    .icon-replace-fill("vertical-grid.svg", "", "");
    background-repeat: repeat;
    background-position: 0 28px; // fake it to have p in middle of grid
    background-size: auto;
}

.vertical-grid * {
    opacity: .96;
}

.style-guide-menu {
    min-height: 100vh;
    padding-top: 32px;
    background-color: @brand-primary;
    color: white;

    h1, h2, h3, h4 {
        color: white;
    }
}

#style-guide-navigation, #style-guide-navigation ul {
    list-style: none;
    margin: 0 0 .5em;
    padding: 0;
}

#style-guide-navigation {
    li {
        padding: 0;
        font-weight: normal;
    }

    > li {
        padding: .5em 0 0;
        font-weight: bold;
        color: @brand-secondary-light;
        text-transform: capitalize;
    }

    > li li:first-child {
        padding-top: .5em;
    }

    button {
        min-width: 80%;
        text-align: left;
    }
}

.box {
    text-align: center;
    padding: 2em .2em;
}

.box-dark {
    background-color: @brand-primary;
    color: white;
    border-radius: 3px;
}


//# Colours ###########################

.brand {
    border-radius: 12px;
    color: white;
    padding: 2em .2em;
    margin-bottom: 1em;
    text-align: center;
}

.brand-primary {
    background-color: @brand-primary;
}

.brand-primary-alt {
    background-color: @brand-primary-alt;
}

.brand-primary-light {
    background-color: @brand-primary-light;
    color: @brand-dark;
}

.brand-primary-pale {
    background-color: @brand-primary-pale;
    color: @brand-dark;
}

.brand-secondary {
    background-color: @brand-secondary;
}

.brand-secondary-dark {
    background-color: @brand-secondary-dark;
}

.brand-secondary-light {
    background-color: @brand-secondary-light;
    color: @brand-dark;
}

.brand-white {
    background-color: @brand-white;
    color: @brand-dark;
}

.brand-light {
    background-color: @brand-light;
    color: @brand-dark;
}

.brand-mid-light {
    background-color: @brand-mid-light;
    color: @brand-dark;
}

.brand-mid-dark {
    background-color: @brand-mid-dark;
}

.brand-dark {
    background-color: @brand-dark;
}

.brand-alert {
    background-color: @brand-alert;
    color: @brand-dark;
}

.brand-error {
    background-color: @brand-error;
}


.gradient-energy-1 {
    background-color: @gradient-energy-1;
}

.gradient-energy-2 {
    background-color: @gradient-energy-2;
}

.gradient-energy-3 {
    background-color: @gradient-energy-3;
    color: @brand-dark;
}
// remember gradients are an image, not a background
.gradient-energy {
    .sse-horizontal-gradient(@gradient-energy-1, @gradient-energy-2, @gradient-energy-3);
}

.gradient-home-1 {
    background-color: @gradient-home-1;
}

.gradient-home-2 {
    background-color: @gradient-home-2;
}

.gradient-home-3 {
    background-color: @gradient-home-3;
}

.gradient-home {
    .sse-horizontal-gradient(@gradient-home-1, @gradient-home-2, @gradient-home-3);
}

.gradient-telco-1 {
    background-color: @gradient-telco-1;
}

.gradient-telco-2 {
    background-color: @gradient-telco-2;
}

.gradient-telco-3 {
    background-color: @gradient-telco-3;
}

.gradient-telco {
    .sse-horizontal-gradient(@gradient-telco-1, @gradient-telco-2, @gradient-telco-3);
}

.gradient-sse-1 {
    background-color: @gradient-sse-1;
}

.gradient-sse-2 {
    background-color: @gradient-sse-2;
}

.gradient-sse-3 {
    background-color: @gradient-sse-3;
}

.gradient-sse {
    .sse-horizontal-gradient(@gradient-sse-1, @gradient-sse-2, @gradient-sse-3);
}






.button {
    transition: all ease-in-out .1s;

}

// will not work on <input ... />
.button-loading {
    position: relative;
    padding-right: 48px;

    &:after,    &:before {
        content: '';
        position: absolute;
        width: 24px;
        height: 24px;
        top: calc(~"50% - 12px");
        right: 12px;
        opacity: 1;
    }

    &:before {
        //.icon-replace-fill("../svgs/icons/loading.svg", "currentColor", "white");
        animation: spin 3.1s linear infinite;
    }

    &:after {
        .icon-replace-fill("../svgs/icons/loading2.svg", "currentColor", "white");
        //animation: spin 2.3s linear reverse infinite;
        animation: spin 2.3s linear infinite;
    }

}

// wrapping span on input to allow before and after
span.button-loading {
    display: inline-block;
    padding-right: 0; // override

    &:after,    &:before {
        right: 12px + 16px; // to allow for right margin on button
        z-index: 999; // for span surrounding input type submit
    }
}



@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}