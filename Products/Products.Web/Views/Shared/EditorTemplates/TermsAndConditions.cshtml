@using Products.Web.Helpers
@model bool
@{
    string propertyName = ViewData.ModelMetadata.PropertyName;
    string propertyDisplayText = ViewData.ModelMetadata.DisplayName;

    string termsAndConditionText = (string) ViewData["TermsAndConditionsText"];


    var defaultHtmlAttributesObject = new
    {
        title = ViewData.ModelMetadata.DisplayName,
        autocomplete = "off"
    };

    object htmlAttributesObject = ViewData["htmlAttributes"] ?? new { };
    IDictionary<string, object> htmlAttributes = Html.MergeHtmlAttributes(htmlAttributesObject, defaultHtmlAttributesObject);
    htmlAttributes.Add("aria-required", ViewContext.ViewData.ModelMetadata.IsRequired);
    bool hasAriaDescription = false;
    if (ViewData.ModelMetadata.AdditionalValues.ContainsKey("AriaDescription"))
    {
        hasAriaDescription = true;
        htmlAttributes.Add("aria-describedby", $"{ViewData.ModelMetadata.PropertyName}-description");
    }
}

<div>
    @Html.CheckBoxFor(m => m)
    <label for="@propertyName" id="checkbox-label" title="@ViewData.ModelMetadata.AdditionalValues["AriaDescription"]">
        @if (!string.IsNullOrEmpty(termsAndConditionText))
        {
            @Html.Raw(termsAndConditionText)
        }
        else
        {
            @Html.Raw(propertyDisplayText)
        }
    </label>

    @Html.ValidationMessageFor(model => model)
</div>
@if (hasAriaDescription)
{
    <p id="@ViewData.ModelMetadata.PropertyName-description" class="sr-only">@ViewData.ModelMetadata.AdditionalValues["AriaDescription"]</p>
}